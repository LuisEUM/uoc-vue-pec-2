{
  "exercises": [
    {
      "id": 1,
      "title": "Crear componente ProductCard",
      "points": 0.5,
      "status": "completed",
      "completed": true,
      "grade": 0.5,
      "requirements": {
        "props": [
          {
            "name": "title",
            "type": "String",
            "required": true
          },
          {
            "name": "price",
            "type": "Number",
            "required": true
          },
          {
            "name": "inStock",
            "type": "Boolean",
            "required": true
          }
        ],
        "data": [
          {
            "name": "quantity",
            "type": "Number",
            "initialValue": 0
          },
          {
            "name": "shipping",
            "type": "Array",
            "initialValue": [
              {
                "id": 1,
                "cost": 3.95,
                "days": 3,
                "country": "Germany",
                "freeShippingItems": 10
              },
              {
                "id": 2,
                "cost": 0.5,
                "days": 15,
                "country": "China",
                "freeShippingItems": 5
              }
            ]
          },
          {
            "name": "selectedShipping",
            "type": "Object",
            "initialValue": {}
          }
        ]
      },
      "steps": [
        "Crear nuevo archivo ProductCard.vue en la carpeta components",
        "Definir la estructura básica del componente (template, script, style)",
        "Configurar props requeridos",
        "Configurar data con valores iniciales",
        "Implementar template básico"
      ],
      "files_to_modify": ["src/components/ProductCard.vue"],
      "template_example": "<h2>{{ title }}</h2>\n<p>Price: ${{ price }}</p>"
    },
    {
      "id": 2,
      "title": "Añadir método increaseQuantity",
      "points": 0.25,
      "status": "completed",
      "completed": true,
      "grade": 0.25,
      "requirements": {
        "method": {
          "name": "increaseQuantity",
          "conditions": [
            "Incrementar quantity en 1",
            "Solo si shipping tiene valores"
          ]
        },
        "ui": {
          "button": {
            "text": "Add to cart",
            "action": "increaseQuantity"
          }
        }
      },
      "steps": [
        "Añadir método increaseQuantity en la sección methods",
        "Verificar que shipping.length > 0 antes de incrementar",
        "Añadir botón en el template",
        "Vincular botón con el método usando @click"
      ],
      "files_to_modify": ["src/components/ProductCard.vue"]
    },
    {
      "id": 3,
      "title": "Mostrar mensaje de sin stock",
      "points": 0.25,
      "status": "completed",
      "completed": true,
      "grade": 0.25,
      "requirements": {
        "conditional": "v-if=\"!inStock\"",
        "template": "<small>Out of stock</small>"
      },
      "steps": [
        "Añadir condición v-if en el template",
        "Colocar el mensaje después del precio",
        "Verificar que se muestra solo cuando inStock es false"
      ],
      "files_to_modify": ["src/components/ProductCard.vue"]
    },
    {
      "id": 4,
      "title": "Deshabilitar botón Add to cart",
      "points": 0.5,
      "status": "completed",
      "completed": true,
      "grade": 0.5,
      "requirements": {
        "button": {
          "disabled": "!inStock || shipping.length === 0"
        }
      },
      "steps": [
        "Modificar el botón Add to cart",
        "Añadir atributo :disabled con la condición compuesta",
        "Verificar que el botón se deshabilita en ambos casos"
      ],
      "files_to_modify": ["src/components/ProductCard.vue"]
    },
    {
      "id": 5,
      "title": "Mensaje de envío gratuito",
      "points": 0.5,
      "status": "completed",
      "completed": true,
      "grade": 0.5,
      "requirements": {
        "logic": [
          "Calcular items restantes para envío gratuito",
          "Mostrar mensaje solo si hay shipping seleccionado",
          "Usar freeShippingItems del shipping seleccionado"
        ],
        "template": "<p>Buy {{ remainingItems }} more items to have free shipping!</p>"
      },
      "steps": [
        "Añadir computed property para calcular items restantes",
        "Verificar que selectedShipping tiene valor",
        "Calcular diferencia entre freeShippingItems y quantity actual",
        "Mostrar mensaje condicional en el template"
      ],
      "files_to_modify": ["src/components/ProductCard.vue"],
      "hints": [
        "Usar computed property para el cálculo",
        "Considerar el caso cuando no hay shipping seleccionado",
        "El mensaje solo debe mostrarse si hay items restantes > 0"
      ]
    }
  ]
}
